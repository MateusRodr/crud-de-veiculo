metodos que vou utilizar

get (create)
put (atualiza)
post (update)
delete (deleta)

atributos

-id
-placa
-chassi
-renavam
-modelo
-marca
-ano

criar um teste para cada elemento do crud

soltar o codigo no github

[
  {
    "id": 1,
    "placa": "ABC1D23",
    "chassi": "9BWZZZ377VT004251",
    "renavam": 12345678901,
    "modelo": "GOL",
    "marca": "VOLKSWAGEN",
    "ano": 2018
  },
  {
    "id": "2",
    "placa": "EFG2H23",
    "renavam": "23456789902",
    "modelo": "mustang",
    "marca": "ford",
    "ano": "2024"
  }
]

const request = require("supertest");
const app = require("./index"); // Importa o aplicativo Express

describe("Testes para a API de Veículos", () => {
  
  // Testando o método GET para todos os veículos
  test("GET /veiculo - Deve retornar todos os veículos", async () => {
    const response = await request(app).get("/veiculo");
    expect(response.statusCode).toBe(200);
    expect(response.body).toBeInstanceOf(Array);
  });

  // Testando o método GET para um veículo específico
  test("GET /veiculo/:index - Deve retornar um veículo específico", async () => {
    const response = await request(app).get("/veiculo/0");
    expect(response.statusCode).toBe(200);
    expect(response.body).toHaveProperty("placa", "ABC1D23");
  });

  // Testando o método POST para adicionar um novo veículo
  test("POST /veiculo - Deve adicionar um novo veículo", async () => {
    const novoVeiculo = {
      id: 2,
      placa: "EFG2H23",
      chassi: "9BWZZZ377VT004252",
      renavam: 23456789902,
      modelo: "Mustang",
      marca: "Ford",
      ano: 2024
    };

    const response = await request(app).post("/veiculo").send(novoVeiculo);
    expect(response.statusCode).toBe(200);
    expect(response.body).toEqual(
      expect.arrayContaining([expect.objectContaining(novoVeiculo)])
    );
  });

  // Testando o método PUT para atualizar um veículo
  test("PUT /veiculo/:index - Deve atualizar um veículo específico", async () => {
    const veiculoAtualizado = {
      id: 1,
      placa: "ABC1D23",
      chassi: "9BWZZZ377VT004251",
      renavam: 12345678901,
      modelo: "GOL GT",
      marca: "VOLKSWAGEN",
      ano: 2020
    };

    const response = await request(app).put("/veiculo/0").send(veiculoAtualizado);
    expect(response.statusCode).toBe(200);
    expect(response.body).toHaveProperty("modelo", "GOL GT");
    expect(response.body.ano).toBe(2020);
  });

  // Testando o método DELETE para remover um veículo
  test("DELETE /veiculo/:index - Deve deletar um veículo específico", async () => {
    const response = await request(app).delete("/veiculo/0");
    expect(response.statusCode).toBe(200);
    expect(response.body).toBeInstanceOf(Array);
  });
});



